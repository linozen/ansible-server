---
- name: Register "{{ docker_user }}" info
  become: "yes"
  user:
    name: "{{ docker_user }}"
  check_mode: "yes"
  register: docker_user_info

- name: start drone-runner-docker container
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ docker_user_info.uid }}"
    PATH: "{{ docker_user_info.home }}/bin:{{ ansible_env.PATH }}"
    DOCKER_HOST: "unix:///run/user/{{ docker_user_info.uid }}/docker.sock"
  block:
    - name: Start drone/drone-runner-docker container with traefik as reverse proxy
      become: "yes"
      become_user: "{{ docker_user }}"
      docker_container:
        name: drone-runner
        image: drone/drone-runner-docker:1
        state: started
        pull: "yes"
        restart: "yes"
        restart_policy: always
        networks:
          - name: web
        volumes:
          - "/var/run/user/{{ docker_user_info.uid }}/docker.sock:/var/run/docker.sock"
        ports:
          - "3000:3000"
        labels:
          traefik.enable: "true"
          traefik.http.routers.drone.rule: "Host(`{{ drone_runner_url }}`)"
          traefik.http.routers.drone.entrypoints: "https"
          traefik.http.routers.drone.tls: "true"
          traefik.http.routers.drone.tls.certresolver: "letsencrypt"
          traefik.http.middlewares.drone-https.redirectscheme.scheme: "https"
          traefik.http.routers.drone-http.entrypoints: "http"
          traefik.http.routers.drone-http.rule: "Host(`{{ drone_runner_url }}`)"
          traefik.http.routers.drone-http.middlewares: "drone-https@docker"
          traefik.http.services.drone.loadbalancer.server.port: "3000"
        env:
          DRONE_RPC_PROTO: https
          DRONE_RPC_HOST: ci.sehn.dev
          DRONE_RPC_SECRET: "{{ drone_rpc_secret }}"
          DRONE_RUNNER_CAPACITY: "2"
          DRONE_RUNNER_NAME: "{{ ansible_nodename }}"
          DRONE_RUNNER_LABELS: "{{ drone_runner_labels }}"
          DRONE_UI_USERNAME: "{{ drone_runner_username }}"
          DRONE_UI_PASSWORD: "{{ drone_runner_password }}"
        hostname: "{{ ansible_nodename }}"
